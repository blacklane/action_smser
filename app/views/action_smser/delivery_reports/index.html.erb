
<%
params['time_span'] ||= 'Last Month'

time_span = case params['time_span'].to_s.downcase
  when 'previous week'
    2.weeks.ago..1.week.ago
  when 'last month'
    1.month.ago..10.minutes.ago
  when 'last 24 hours'
    1.day.ago..10.minutes.ago
  when 'previous 24 hours'
    2.days.ago..1.day.ago
  else
    1.week.ago..10.minutes.ago
  end

  ar_timespan = ActionSmser::DeliveryReport.where(:created_at => time_span)

  ar_gateway = ar_timespan
  ar_gateway = ar_gateway.where(:gateway => params[:gateway]) if (params[:gateway] && params[:gateway].to_s != 'all')

%>


<h1>Delivery Reports Summary for <%= params['time_span'] %> <%= "for #{params[:gateway]}" unless params[:gateway].blank? %></h1>

<p>
Show summary:
<%= link_to 'Last 24 hours', delivery_reports_path(:time_span => 'Last 24 Hours', :gateway => params[:gateway]) %>,
<%= link_to '24 hours before that', delivery_reports_path(:time_span => 'Previous 24 Hours', :gateway => params[:gateway]) %>,
<%= link_to 'Last week', delivery_reports_path(:time_span => 'Last Week', :gateway => params[:gateway]) %>,
<%= link_to 'Week before that', delivery_reports_path(:time_span => 'Previous Week', :gateway => params[:gateway]) %> or
<%= link_to 'Last month', delivery_reports_path(:time_span => 'Last Month', :gateway => params[:gateway]) %>.
</p>

<h2>Select gateway</h2>

<ul>
  <li>
    <strong>
        <%= link_to('all', delivery_reports_path(:time_span => params[:time_span]) ) %>
    </strong>
    &nbsp;&nbsp;
    (you can select only gateways that have messages in this period)
  </li>
  <%
     total = ar_timespan.count
     grouped_by_status = ar_timespan.group(:gateway).count.each do |key, val| %>
    <li>
      <strong>
        <%= link_to(key, delivery_reports_path(:time_span => params[:time_span], :gateway => key) ) %>
      </strong>
      &nbsp;&nbsp;
      <%= val %> sms
      &nbsp;&nbsp;
      (<strong><%= number_to_percentage(100.0 * val / total, :precision => 2) %></strong>)
    </li>
  <% end %>
</ul>


<h2>Delivered Within (hour:min:sec)</h2>

<% if ActiveRecord::Base.connection.adapter_name.downcase.to_s.include?("mysql") %>

  <table>
    <tr>
      <th>DeliveryTime</th>
      <th>Sms</th>
      <th>% of sent sms</th>
      <th>% of delivered sms</th>
    </tr>

    <% ar_delivered = ar_gateway.where(:status => 'delivered')
       total = ar_gateway.count
       total_delivered = ar_delivered.count
    %>
    <% ["00:00:30", "00:01:00", "00:02:00", "00:10:00", "00:30:00", "00:90:00", "24:00:00", "48:00:00"].each do |time| %>
      <% dev_count = ar_delivered.where('TIMEDIFF(status_updated_at, created_at) < ?', time).count %>
      <tr>
        <td><%= time %></td>
        <td><%= dev_count %></td>
        <td><%= number_to_percentage(100.0 * dev_count / total, :precision => 2) %></td>
        <td><%= number_to_percentage(100.0 * dev_count / total_delivered, :precision => 2) %></td>
      </tr>
    <% end %>

  </table>

<% else %>
  Delivery report uses timediff sql and has only been tested with MySql. Disabled with other adapters for now.
<% end %>

<h2>DeliveryReport Statuses</h2>
<ul>
<%
   total = ar_gateway.count
   grouped_by_status = ar_gateway.group(:status).count.each do |key, val| %>

    <li>
      <strong><%= key %></strong>:
      &nbsp;&nbsp;
      <%= val %> sms
      &nbsp;&nbsp;
      (<strong><%= number_to_percentage(100.0 * val / total, :precision => 2) %></strong>)
    </li>
<% end %>
</ul>

<h2>By Sms Type</h2>
<table>
  <tr>
    <th>SmsType</th>
    <th>Count</th>
    <th>% of total</th>
    <th>Delivered count</th>
    <th>Delivery %</th>
  </tr>

<%
   total = ar_gateway.count
   grouped_by_status = ar_gateway.group(:sms_type).count.each do |key, val| %>
   <tr>
     <td><strong><%= key %></strong></td>
     <td><%= val %></td>
     <td><strong><%= number_to_percentage(100.0 * val / total, :precision => 2) %></strong></td>
     <td><%= sms_count = ActionSmser::DeliveryReport.where(:created_at => time_span).where(:sms_type => key).where(:status => 'delivered').count %></td>
     <td><strong><%= number_to_percentage(100.0 * sms_count / val, :precision => 2) %></strong></td>
   </tr>
<% end %>
</table>


